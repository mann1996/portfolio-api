2020-Jun-18 18:57:37 pm [main] INFO  com.portfolio.api.PortfolioApplication - Starting PortfolioApplication on DESKTOP-4PS6C6T with PID 10080 (E:\protfolio\portfolio-api\target\classes started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-18 18:57:37 pm [main] INFO  com.portfolio.api.PortfolioApplication - No active profile set, falling back to default profiles: default
2020-Jun-18 18:57:38 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-18 18:57:38 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65ms. Found 3 JPA repository interfaces.
2020-Jun-18 18:57:38 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-Jun-18 18:57:38 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-Jun-18 18:57:38 pm [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-Jun-18 18:57:38 pm [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-Jun-18 18:57:38 pm [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-Jun-18 18:57:38 pm [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1543 ms
2020-Jun-18 18:57:39 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-18 18:57:39 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-Jun-18 18:57:39 pm [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-18 18:57:39 pm [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-18 18:57:39 pm [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-18 18:57:39 pm [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-Jun-18 18:57:40 pm [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-Jun-18 18:57:40 pm [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-18 18:57:40 pm [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-Jun-18 18:57:40 pm [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@65a66a75, org.springframework.security.web.context.SecurityContextPersistenceFilter@2e40ea48, org.springframework.security.web.header.HeaderWriterFilter@6a97517, org.springframework.web.filter.CorsFilter@5a07ae2f, org.springframework.security.web.authentication.logout.LogoutFilter@7ce4498f, com.portfolio.api.security.AuthenticationFilter@78829412, com.portfolio.api.security.AuthorizationFilter@3ba8ef4e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@291028d7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ee186f3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6d0bcf8c, org.springframework.security.web.session.SessionManagementFilter@65021bb4, org.springframework.security.web.access.ExceptionTranslationFilter@6b94c200, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@629de8]
2020-Jun-18 18:57:41 pm [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-Jun-18 18:57:41 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-Jun-18 18:57:41 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2020-Jun-18 18:57:41 pm [main] INFO  com.portfolio.api.PortfolioApplication - Started PortfolioApplication in 4.583 seconds (JVM running for 5.633)
2020-Jun-18 18:57:48 pm [http-nio-8080-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-Jun-18 18:57:48 pm [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-Jun-18 18:57:48 pm [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-Jun-18 18:57:48 pm [http-nio-8080-exec-1] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: jsprtmnn@gmail.com
2020-Jun-18 19:20:22 pm [http-nio-8080-exec-4] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: shubham@g
2020-Jun-18 19:20:22 pm [http-nio-8080-exec-5] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: shubham@gm
2020-Jun-18 19:20:23 pm [http-nio-8080-exec-6] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: shubham@gma
2020-Jun-18 19:20:23 pm [http-nio-8080-exec-7] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: shubham@gmai
2020-Jun-18 19:20:23 pm [http-nio-8080-exec-8] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: shubham@gmail
2020-Jun-18 19:20:24 pm [http-nio-8080-exec-9] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: shubham@gmail.c
2020-Jun-18 19:20:24 pm [http-nio-8080-exec-10] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: shubham@gmail.co
2020-Jun-18 19:20:24 pm [http-nio-8080-exec-2] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: shubham@gmail.com
2020-Jun-18 19:37:24 pm [http-nio-8080-exec-2] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: rahul.rana22@g
2020-Jun-18 19:37:24 pm [http-nio-8080-exec-1] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: rahul.rana22@gm
2020-Jun-18 19:37:24 pm [http-nio-8080-exec-3] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: rahul.rana22@gma
2020-Jun-18 19:37:25 pm [http-nio-8080-exec-4] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: rahul.rana22@gmai
2020-Jun-18 19:37:25 pm [http-nio-8080-exec-5] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: rahul.rana22@gmail
2020-Jun-18 19:37:26 pm [http-nio-8080-exec-6] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: rahul.rana22@gmail.c
2020-Jun-18 19:37:26 pm [http-nio-8080-exec-7] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: rahul.rana22@gmail.co
2020-Jun-18 19:37:26 pm [http-nio-8080-exec-8] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.security.core.userdetails.UsernameNotFoundException: rahul.rana22@gmail.com
2020-Jun-18 19:51:43 pm [RMI TCP Connection(62)-127.0.0.1] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2020-Jun-18 19:51:43 pm [RMI TCP Connection(62)-127.0.0.1] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-Jun-18 19:51:43 pm [RMI TCP Connection(62)-127.0.0.1] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-18 19:51:44 pm [RMI TCP Connection(62)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-Jun-18 19:51:44 pm [RMI TCP Connection(62)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-Jun-18 19:52:48 pm [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.portfolio.api.portfolioapi.DemoApplicationTests], using SpringBootContextLoader
2020-Jun-18 19:52:48 pm [main] INFO  org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.portfolio.api.portfolioapi.DemoApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-Jun-18 19:52:48 pm [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.portfolio.api.portfolioapi.DemoApplicationTests]: DemoApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-Jun-18 19:52:49 pm [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.portfolio.api.PortfolioApplication for test class com.portfolio.api.portfolioapi.DemoApplicationTests
2020-Jun-18 19:52:50 pm [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-Jun-18 19:52:50 pm [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1051817b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@35293c05, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@620aa4ea, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2db2dd9d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3174cb09, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4d411036, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7adbd080, org.springframework.test.context.event.EventPublishingTestExecutionListener@41beb473, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@560513ce, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@13006998, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@37fbe4a8, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@352c308, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7d373bcf]
2020-Jun-18 19:52:52 pm [main] INFO  com.portfolio.api.portfolioapi.DemoApplicationTests - Starting DemoApplicationTests on DESKTOP-4PS6C6T with PID 7916 (started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-18 19:52:52 pm [main] INFO  com.portfolio.api.portfolioapi.DemoApplicationTests - No active profile set, falling back to default profiles: default
2020-Jun-18 19:52:57 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-18 19:52:57 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 273ms. Found 3 JPA repository interfaces.
2020-Jun-18 19:53:01 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-18 19:53:05 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-Jun-18 19:53:05 pm [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-18 19:53:07 pm [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-18 19:53:11 pm [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-18 19:53:13 pm [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-Jun-18 19:53:18 pm [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-Jun-18 19:53:18 pm [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-18 19:53:21 pm [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-Jun-18 19:53:22 pm [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c205259, org.springframework.security.web.context.SecurityContextPersistenceFilter@7c93e69, org.springframework.security.web.header.HeaderWriterFilter@1a06b95, org.springframework.web.filter.CorsFilter@5bc40f5d, org.springframework.security.web.authentication.logout.LogoutFilter@7bf16972, com.portfolio.api.security.AuthenticationFilter@20923380, com.portfolio.api.security.AuthorizationFilter@5b2c41f9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2526d5f9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78c23ade, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6520625f, org.springframework.security.web.session.SessionManagementFilter@79486f38, org.springframework.security.web.access.ExceptionTranslationFilter@31aa9b01, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@23ee70a7]
2020-Jun-18 19:53:24 pm [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-Jun-18 19:53:25 pm [main] INFO  com.portfolio.api.portfolioapi.DemoApplicationTests - Started DemoApplicationTests in 35.272 seconds (JVM running for 50.673)
2020-Jun-18 19:53:28 pm [SpringContextShutdownHook] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-Jun-18 19:53:28 pm [SpringContextShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-18 19:53:28 pm [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-Jun-18 19:53:28 pm [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-Jun-21 15:42:17 pm [main] INFO  com.portfolio.api.PortfolioApplication - Starting PortfolioApplication on DESKTOP-4PS6C6T with PID 13924 (E:\protfolio\portfolio-api\target\classes started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-21 15:42:17 pm [main] INFO  com.portfolio.api.PortfolioApplication - No active profile set, falling back to default profiles: default
2020-Jun-21 15:42:21 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-21 15:42:21 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 192ms. Found 3 JPA repository interfaces.
2020-Jun-21 15:42:22 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-Jun-21 15:42:22 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-Jun-21 15:42:22 pm [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-Jun-21 15:42:22 pm [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-Jun-21 15:42:22 pm [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-Jun-21 15:42:22 pm [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5095 ms
2020-Jun-21 15:42:23 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-21 15:42:23 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-Jun-21 15:42:23 pm [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-21 15:42:24 pm [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-21 15:42:24 pm [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-21 15:42:24 pm [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-Jun-21 15:42:26 pm [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-Jun-21 15:42:26 pm [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 15:42:27 pm [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-Jun-21 15:42:27 pm [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3aed692d, org.springframework.security.web.context.SecurityContextPersistenceFilter@332fa1c, org.springframework.security.web.header.HeaderWriterFilter@760c777d, org.springframework.web.filter.CorsFilter@4eec5fa6, org.springframework.security.web.authentication.logout.LogoutFilter@70d7a49b, com.portfolio.api.security.AuthenticationFilter@21579b35, com.portfolio.api.security.AuthorizationFilter@25b83dce, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d0f7bcf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3346e906, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74cd8c55, org.springframework.security.web.session.SessionManagementFilter@1aef7428, org.springframework.security.web.access.ExceptionTranslationFilter@77226121, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@47666b39]
2020-Jun-21 15:42:28 pm [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-Jun-21 15:42:28 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-Jun-21 15:42:28 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2020-Jun-21 15:42:28 pm [main] INFO  com.portfolio.api.PortfolioApplication - Started PortfolioApplication in 12.058 seconds (JVM running for 14.954)
2020-Jun-21 15:44:37 pm [http-nio-8080-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-Jun-21 15:44:37 pm [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-Jun-21 15:44:37 pm [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 40 ms
2020-Jun-21 16:38:18 pm [RMI TCP Connection(67)-127.0.0.1] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2020-Jun-21 16:38:18 pm [RMI TCP Connection(67)-127.0.0.1] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-Jun-21 16:38:18 pm [RMI TCP Connection(67)-127.0.0.1] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 16:38:18 pm [RMI TCP Connection(67)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-Jun-21 16:38:18 pm [RMI TCP Connection(67)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-Jun-21 17:34:44 pm [main] INFO  com.portfolio.api.PortfolioApplication - Starting PortfolioApplication on DESKTOP-4PS6C6T with PID 4780 (E:\protfolio\portfolio-api\target\classes started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-21 17:34:44 pm [main] INFO  com.portfolio.api.PortfolioApplication - No active profile set, falling back to default profiles: default
2020-Jun-21 17:34:46 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-21 17:34:46 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 90ms. Found 4 JPA repository interfaces.
2020-Jun-21 17:34:48 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-Jun-21 17:34:48 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-Jun-21 17:34:48 pm [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-Jun-21 17:34:48 pm [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-Jun-21 17:34:48 pm [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-Jun-21 17:34:48 pm [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3295 ms
2020-Jun-21 17:34:48 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-21 17:34:49 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-Jun-21 17:34:49 pm [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-21 17:34:49 pm [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-21 17:34:49 pm [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-21 17:34:50 pm [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-Jun-21 17:34:51 pm [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-Jun-21 17:34:51 pm [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 17:34:52 pm [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-Jun-21 17:34:53 pm [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1afa048a, org.springframework.security.web.context.SecurityContextPersistenceFilter@450f0d89, org.springframework.security.web.header.HeaderWriterFilter@2b4954a4, org.springframework.web.filter.CorsFilter@293ecff6, org.springframework.security.web.authentication.logout.LogoutFilter@1f013047, com.portfolio.api.security.AuthenticationFilter@70eb94d7, com.portfolio.api.security.AuthorizationFilter@34d72f06, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3e0327dd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@8f374de, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7e43b342, org.springframework.security.web.session.SessionManagementFilter@cfc4601, org.springframework.security.web.access.ExceptionTranslationFilter@5cba474f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1adf387e]
2020-Jun-21 17:34:53 pm [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-Jun-21 17:34:54 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-Jun-21 17:34:54 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2020-Jun-21 17:34:54 pm [main] INFO  com.portfolio.api.PortfolioApplication - Started PortfolioApplication in 10.411 seconds (JVM running for 14.87)
2020-Jun-21 17:37:46 pm [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-Jun-21 17:37:46 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-Jun-21 17:37:46 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-Jun-21 17:42:57 pm [http-nio-8080-exec-7] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper - SQL Error: 1146, SQLState: 42S02
2020-Jun-21 17:42:57 pm [http-nio-8080-exec-7] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper - Table 'portfolio.connent' doesn't exist
2020-Jun-21 17:42:57 pm [http-nio-8080-exec-7] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement
2020-Jun-21 17:42:57 pm [http-nio-8080-exec-7] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement
2020-Jun-21 17:42:57 pm [http-nio-8080-exec-7] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.web.server.ResponseStatusException: 400 BAD_REQUEST
2020-Jun-21 17:44:09 pm [RMI TCP Connection(19)-127.0.0.1] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2020-Jun-21 17:44:09 pm [RMI TCP Connection(19)-127.0.0.1] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-Jun-21 17:44:09 pm [RMI TCP Connection(19)-127.0.0.1] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 17:44:09 pm [RMI TCP Connection(19)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-Jun-21 17:44:09 pm [RMI TCP Connection(19)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-Jun-21 17:44:18 pm [main] INFO  com.portfolio.api.PortfolioApplication - Starting PortfolioApplication on DESKTOP-4PS6C6T with PID 12444 (E:\protfolio\portfolio-api\target\classes started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-21 17:44:18 pm [main] INFO  com.portfolio.api.PortfolioApplication - No active profile set, falling back to default profiles: default
2020-Jun-21 17:44:19 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-21 17:44:19 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 116ms. Found 4 JPA repository interfaces.
2020-Jun-21 17:44:20 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-Jun-21 17:44:20 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-Jun-21 17:44:20 pm [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-Jun-21 17:44:20 pm [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-Jun-21 17:44:20 pm [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-Jun-21 17:44:20 pm [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2520 ms
2020-Jun-21 17:44:21 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-21 17:44:21 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-Jun-21 17:44:21 pm [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-21 17:44:22 pm [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-21 17:44:22 pm [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-21 17:44:22 pm [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-Jun-21 17:44:23 pm [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-Jun-21 17:44:23 pm [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 17:44:24 pm [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-Jun-21 17:44:24 pm [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@57fc6759, org.springframework.security.web.context.SecurityContextPersistenceFilter@d271d6c, org.springframework.security.web.header.HeaderWriterFilter@90394d, org.springframework.web.filter.CorsFilter@33a7331, org.springframework.security.web.authentication.logout.LogoutFilter@a1a72d4, com.portfolio.api.security.AuthenticationFilter@7aef21bb, com.portfolio.api.security.AuthorizationFilter@50d4775b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1860b107, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19f1f330, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@642614b7, org.springframework.security.web.session.SessionManagementFilter@6fafbdac, org.springframework.security.web.access.ExceptionTranslationFilter@7169d668, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@319d106c]
2020-Jun-21 17:44:24 pm [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-Jun-21 17:44:25 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-Jun-21 17:44:25 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2020-Jun-21 17:44:25 pm [main] INFO  com.portfolio.api.PortfolioApplication - Started PortfolioApplication in 7.624 seconds (JVM running for 11.662)
2020-Jun-21 17:44:29 pm [http-nio-8080-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-Jun-21 17:44:29 pm [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-Jun-21 17:44:29 pm [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2020-Jun-21 17:45:45 pm [RMI TCP Connection(10)-127.0.0.1] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2020-Jun-21 17:45:45 pm [RMI TCP Connection(10)-127.0.0.1] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-Jun-21 17:45:45 pm [RMI TCP Connection(10)-127.0.0.1] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 17:45:45 pm [RMI TCP Connection(10)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-Jun-21 17:45:45 pm [RMI TCP Connection(10)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-Jun-21 18:07:16 pm [main] INFO  com.portfolio.api.PortfolioApplication - Starting PortfolioApplication on DESKTOP-4PS6C6T with PID 5924 (E:\protfolio\portfolio-api\target\classes started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-21 18:07:16 pm [main] INFO  com.portfolio.api.PortfolioApplication - No active profile set, falling back to default profiles: default
2020-Jun-21 18:07:17 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-21 18:07:17 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63ms. Found 4 JPA repository interfaces.
2020-Jun-21 18:07:18 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-Jun-21 18:07:18 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-Jun-21 18:07:18 pm [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-Jun-21 18:07:18 pm [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-Jun-21 18:07:18 pm [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-Jun-21 18:07:18 pm [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1571 ms
2020-Jun-21 18:07:18 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-21 18:07:18 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-Jun-21 18:07:18 pm [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-21 18:07:18 pm [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-21 18:07:18 pm [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-21 18:07:18 pm [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-Jun-21 18:07:19 pm [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-Jun-21 18:07:19 pm [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 18:07:20 pm [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-Jun-21 18:07:20 pm [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3d12f065, org.springframework.security.web.context.SecurityContextPersistenceFilter@c7c07ff, org.springframework.security.web.header.HeaderWriterFilter@2f498f21, org.springframework.web.filter.CorsFilter@57fc6759, org.springframework.security.web.authentication.logout.LogoutFilter@6d0bcf8c, com.portfolio.api.security.AuthenticationFilter@33a7331, com.portfolio.api.security.AuthorizationFilter@7aef21bb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@a302f30, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5020e5ab, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@50d4775b, org.springframework.security.web.session.SessionManagementFilter@50caeb4b, org.springframework.security.web.access.ExceptionTranslationFilter@314c28dc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@29174dfe]
2020-Jun-21 18:07:20 pm [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-Jun-21 18:07:21 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-Jun-21 18:07:21 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2020-Jun-21 18:07:21 pm [main] INFO  com.portfolio.api.PortfolioApplication - Started PortfolioApplication in 4.922 seconds (JVM running for 5.895)
2020-Jun-21 18:09:06 pm [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-Jun-21 18:09:06 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-Jun-21 18:09:06 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-Jun-21 18:11:25 pm [http-nio-8080-exec-5] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.security.web.firewall.RequestRejectedException: The request was rejected because the URL contained a potentially malicious String "//"
	at org.springframework.security.web.firewall.StrictHttpFirewall.rejectedBlacklistedUrls(StrictHttpFirewall.java:369) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.firewall.StrictHttpFirewall.getFirewalledRequest(StrictHttpFirewall.java:336) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:194) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:832) [?:?]
2020-Jun-21 18:12:04 pm [http-nio-8080-exec-4] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.security.web.firewall.RequestRejectedException: The request was rejected because the URL contained a potentially malicious String "//"
	at org.springframework.security.web.firewall.StrictHttpFirewall.rejectedBlacklistedUrls(StrictHttpFirewall.java:369) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.firewall.StrictHttpFirewall.getFirewalledRequest(StrictHttpFirewall.java:336) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:194) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:832) [?:?]
2020-Jun-21 18:13:43 pm [http-nio-8080-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.security.web.firewall.RequestRejectedException: The request was rejected because the URL contained a potentially malicious String "//"
	at org.springframework.security.web.firewall.StrictHttpFirewall.rejectedBlacklistedUrls(StrictHttpFirewall.java:369) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.firewall.StrictHttpFirewall.getFirewalledRequest(StrictHttpFirewall.java:336) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:194) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:832) [?:?]
2020-Jun-21 18:15:12 pm [http-nio-8080-exec-10] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.security.web.firewall.RequestRejectedException: The request was rejected because the URL contained a potentially malicious String "//"
	at org.springframework.security.web.firewall.StrictHttpFirewall.rejectedBlacklistedUrls(StrictHttpFirewall.java:369) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.firewall.StrictHttpFirewall.getFirewalledRequest(StrictHttpFirewall.java:336) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:194) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:832) [?:?]
2020-Jun-21 18:16:33 pm [http-nio-8080-exec-8] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.security.web.firewall.RequestRejectedException: The request was rejected because the URL contained a potentially malicious String "//"
	at org.springframework.security.web.firewall.StrictHttpFirewall.rejectedBlacklistedUrls(StrictHttpFirewall.java:369) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.firewall.StrictHttpFirewall.getFirewalledRequest(StrictHttpFirewall.java:336) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:194) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:832) [?:?]
2020-Jun-21 18:16:49 pm [http-nio-8080-exec-5] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.security.web.firewall.RequestRejectedException: The request was rejected because the URL contained a potentially malicious String "//"
	at org.springframework.security.web.firewall.StrictHttpFirewall.rejectedBlacklistedUrls(StrictHttpFirewall.java:369) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.firewall.StrictHttpFirewall.getFirewalledRequest(StrictHttpFirewall.java:336) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:194) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:832) [?:?]
2020-Jun-21 18:17:16 pm [http-nio-8080-exec-3] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.security.web.firewall.RequestRejectedException: The request was rejected because the URL contained a potentially malicious String "//"
	at org.springframework.security.web.firewall.StrictHttpFirewall.rejectedBlacklistedUrls(StrictHttpFirewall.java:369) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.firewall.StrictHttpFirewall.getFirewalledRequest(StrictHttpFirewall.java:336) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:194) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:832) [?:?]
2020-Jun-21 18:17:41 pm [http-nio-8080-exec-8] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.security.web.firewall.RequestRejectedException: The request was rejected because the URL contained a potentially malicious String "//"
	at org.springframework.security.web.firewall.StrictHttpFirewall.rejectedBlacklistedUrls(StrictHttpFirewall.java:369) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.firewall.StrictHttpFirewall.getFirewalledRequest(StrictHttpFirewall.java:336) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:194) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:832) [?:?]
2020-Jun-21 18:18:09 pm [http-nio-8080-exec-10] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingPathVariableException: Missing URI template variable 'postId' for method parameter of type Integer]
2020-Jun-21 18:20:22 pm [RMI TCP Connection(23)-127.0.0.1] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2020-Jun-21 18:20:22 pm [RMI TCP Connection(23)-127.0.0.1] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-Jun-21 18:20:22 pm [RMI TCP Connection(23)-127.0.0.1] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 18:20:22 pm [RMI TCP Connection(23)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-Jun-21 18:20:22 pm [RMI TCP Connection(23)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-Jun-21 18:20:27 pm [main] INFO  com.portfolio.api.PortfolioApplication - Starting PortfolioApplication on DESKTOP-4PS6C6T with PID 15464 (E:\protfolio\portfolio-api\target\classes started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-21 18:20:27 pm [main] INFO  com.portfolio.api.PortfolioApplication - No active profile set, falling back to default profiles: default
2020-Jun-21 18:20:28 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-21 18:20:28 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63ms. Found 4 JPA repository interfaces.
2020-Jun-21 18:20:29 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-Jun-21 18:20:29 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-Jun-21 18:20:29 pm [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-Jun-21 18:20:29 pm [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-Jun-21 18:20:29 pm [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-Jun-21 18:20:29 pm [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1400 ms
2020-Jun-21 18:20:29 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-21 18:20:29 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-Jun-21 18:20:29 pm [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-21 18:20:29 pm [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-21 18:20:29 pm [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-21 18:20:29 pm [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-Jun-21 18:20:30 pm [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-Jun-21 18:20:30 pm [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 18:20:31 pm [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-Jun-21 18:20:31 pm [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@35b58254, org.springframework.security.web.context.SecurityContextPersistenceFilter@18df26a1, org.springframework.security.web.header.HeaderWriterFilter@6296e4bf, org.springframework.web.filter.CorsFilter@73baf7f0, org.springframework.security.web.authentication.logout.LogoutFilter@26a202ae, com.portfolio.api.security.AuthenticationFilter@446dacf9, com.portfolio.api.security.AuthorizationFilter@13018f00, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@61d8a491, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@125124ea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@abf1816, org.springframework.security.web.session.SessionManagementFilter@39109603, org.springframework.security.web.access.ExceptionTranslationFilter@53b907d9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2c92f094]
2020-Jun-21 18:20:31 pm [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-Jun-21 18:20:31 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-Jun-21 18:20:31 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2020-Jun-21 18:20:31 pm [main] INFO  com.portfolio.api.PortfolioApplication - Started PortfolioApplication in 4.133 seconds (JVM running for 5.14)
2020-Jun-21 18:20:40 pm [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-Jun-21 18:20:40 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-Jun-21 18:20:40 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-Jun-21 18:24:32 pm [RMI TCP Connection(13)-127.0.0.1] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2020-Jun-21 18:24:32 pm [RMI TCP Connection(13)-127.0.0.1] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-Jun-21 18:24:32 pm [RMI TCP Connection(13)-127.0.0.1] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 18:24:32 pm [RMI TCP Connection(13)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-Jun-21 18:24:32 pm [RMI TCP Connection(13)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-Jun-21 18:31:34 pm [main] INFO  com.portfolio.api.PortfolioApplication - Starting PortfolioApplication on DESKTOP-4PS6C6T with PID 6916 (E:\protfolio\portfolio-api\target\classes started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-21 18:31:34 pm [main] INFO  com.portfolio.api.PortfolioApplication - No active profile set, falling back to default profiles: default
2020-Jun-21 18:31:35 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-21 18:31:35 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 68ms. Found 4 JPA repository interfaces.
2020-Jun-21 18:31:36 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-Jun-21 18:31:36 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-Jun-21 18:31:36 pm [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-Jun-21 18:31:36 pm [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-Jun-21 18:31:36 pm [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-Jun-21 18:31:36 pm [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1490 ms
2020-Jun-21 18:31:36 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-21 18:31:36 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-Jun-21 18:31:36 pm [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-21 18:31:36 pm [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-21 18:31:36 pm [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-21 18:31:37 pm [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-Jun-21 18:31:37 pm [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-Jun-21 18:31:37 pm [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 18:31:38 pm [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-Jun-21 18:31:38 pm [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@411933, org.springframework.security.web.context.SecurityContextPersistenceFilter@632b96b8, org.springframework.security.web.header.HeaderWriterFilter@2c1a95a2, org.springframework.web.filter.CorsFilter@393e7546, org.springframework.security.web.authentication.logout.LogoutFilter@3892802b, com.portfolio.api.security.AuthenticationFilter@6b43b101, com.portfolio.api.security.AuthorizationFilter@37cc6017, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5b430541, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70eb94d7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3fcc7f5c, org.springframework.security.web.session.SessionManagementFilter@72b53f27, org.springframework.security.web.access.ExceptionTranslationFilter@7db2b614, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6bfdaed7]
2020-Jun-21 18:31:38 pm [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-Jun-21 18:31:39 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-Jun-21 18:31:39 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2020-Jun-21 18:31:39 pm [main] INFO  com.portfolio.api.PortfolioApplication - Started PortfolioApplication in 4.513 seconds (JVM running for 5.557)
2020-Jun-21 18:31:55 pm [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-Jun-21 18:31:55 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-Jun-21 18:31:55 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-Jun-21 18:37:42 pm [RMI TCP Connection(16)-127.0.0.1] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2020-Jun-21 18:37:42 pm [RMI TCP Connection(16)-127.0.0.1] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-Jun-21 18:37:42 pm [RMI TCP Connection(16)-127.0.0.1] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 18:37:42 pm [RMI TCP Connection(16)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-Jun-21 18:37:42 pm [RMI TCP Connection(16)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-Jun-21 18:37:47 pm [main] INFO  com.portfolio.api.PortfolioApplication - Starting PortfolioApplication on DESKTOP-4PS6C6T with PID 7296 (E:\protfolio\portfolio-api\target\classes started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-21 18:37:47 pm [main] INFO  com.portfolio.api.PortfolioApplication - No active profile set, falling back to default profiles: default
2020-Jun-21 18:37:48 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-21 18:37:48 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62ms. Found 4 JPA repository interfaces.
2020-Jun-21 18:37:49 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-Jun-21 18:37:49 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-Jun-21 18:37:49 pm [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-Jun-21 18:37:49 pm [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-Jun-21 18:37:49 pm [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-Jun-21 18:37:49 pm [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1432 ms
2020-Jun-21 18:37:49 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-21 18:37:49 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-Jun-21 18:37:49 pm [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-21 18:37:49 pm [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-21 18:37:49 pm [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-21 18:37:49 pm [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-Jun-21 18:37:50 pm [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-Jun-21 18:37:50 pm [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 18:37:50 pm [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-Jun-21 18:37:51 pm [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39c1e7b7, org.springframework.security.web.context.SecurityContextPersistenceFilter@27d6467, org.springframework.security.web.header.HeaderWriterFilter@8dcacf1, org.springframework.web.filter.CorsFilter@1c14d24d, org.springframework.security.web.authentication.logout.LogoutFilter@8091d80, com.portfolio.api.security.AuthenticationFilter@28515443, com.portfolio.api.security.AuthorizationFilter@2eea4441, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2c92f094, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@259c6ab8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1820f274, org.springframework.security.web.session.SessionManagementFilter@73c09a98, org.springframework.security.web.access.ExceptionTranslationFilter@1fa796a4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1002b06d]
2020-Jun-21 18:37:51 pm [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-Jun-21 18:37:51 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-Jun-21 18:37:51 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2020-Jun-21 18:37:51 pm [main] INFO  com.portfolio.api.PortfolioApplication - Started PortfolioApplication in 4.202 seconds (JVM running for 5.18)
2020-Jun-21 18:38:02 pm [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-Jun-21 18:38:02 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-Jun-21 18:38:02 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2020-Jun-21 18:50:09 pm [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=10m19s503ms958µs300ns).
2020-Jun-21 18:55:28 pm [RMI TCP Connection(22)-127.0.0.1] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2020-Jun-21 18:55:28 pm [RMI TCP Connection(22)-127.0.0.1] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-Jun-21 18:55:28 pm [RMI TCP Connection(22)-127.0.0.1] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 18:55:28 pm [RMI TCP Connection(22)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-Jun-21 18:55:28 pm [RMI TCP Connection(22)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-Jun-21 18:55:33 pm [main] INFO  com.portfolio.api.PortfolioApplication - Starting PortfolioApplication on DESKTOP-4PS6C6T with PID 11912 (E:\protfolio\portfolio-api\target\classes started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-21 18:55:33 pm [main] INFO  com.portfolio.api.PortfolioApplication - No active profile set, falling back to default profiles: default
2020-Jun-21 18:55:34 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-21 18:55:34 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69ms. Found 4 JPA repository interfaces.
2020-Jun-21 18:55:35 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-Jun-21 18:55:35 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-Jun-21 18:55:35 pm [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-Jun-21 18:55:35 pm [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-Jun-21 18:55:35 pm [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-Jun-21 18:55:35 pm [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1504 ms
2020-Jun-21 18:55:35 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-21 18:55:35 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-Jun-21 18:55:35 pm [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-21 18:55:35 pm [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-21 18:55:35 pm [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-21 18:55:35 pm [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-Jun-21 18:55:36 pm [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-Jun-21 18:55:36 pm [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 18:55:36 pm [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-Jun-21 18:55:37 pm [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@71e409f, org.springframework.security.web.context.SecurityContextPersistenceFilter@1f365a26, org.springframework.security.web.header.HeaderWriterFilter@185bf6e0, org.springframework.web.filter.CorsFilter@14c18a6a, org.springframework.security.web.authentication.logout.LogoutFilter@629de8, com.portfolio.api.security.AuthenticationFilter@6aa792, com.portfolio.api.security.AuthorizationFilter@5c78f456, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e2cd42c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7169d668, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@29174dfe, org.springframework.security.web.session.SessionManagementFilter@374ba492, org.springframework.security.web.access.ExceptionTranslationFilter@2e1e7bc6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1bb51492]
2020-Jun-21 18:55:37 pm [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-Jun-21 18:55:37 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-Jun-21 18:55:37 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2020-Jun-21 18:55:37 pm [main] INFO  com.portfolio.api.PortfolioApplication - Started PortfolioApplication in 4.298 seconds (JVM running for 5.254)
2020-Jun-21 18:55:41 pm [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-Jun-21 18:55:41 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-Jun-21 18:55:41 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-Jun-21 19:30:45 pm [RMI TCP Connection(44)-127.0.0.1] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2020-Jun-21 19:30:45 pm [RMI TCP Connection(44)-127.0.0.1] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-Jun-21 19:30:45 pm [RMI TCP Connection(44)-127.0.0.1] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 19:30:45 pm [RMI TCP Connection(44)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-Jun-21 19:30:45 pm [RMI TCP Connection(44)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-Jun-21 19:30:50 pm [main] INFO  com.portfolio.api.PortfolioApplication - Starting PortfolioApplication on DESKTOP-4PS6C6T with PID 17164 (E:\protfolio\portfolio-api\target\classes started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-21 19:30:50 pm [main] INFO  com.portfolio.api.PortfolioApplication - No active profile set, falling back to default profiles: default
2020-Jun-21 19:30:50 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-21 19:30:50 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63ms. Found 4 JPA repository interfaces.
2020-Jun-21 19:30:51 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-Jun-21 19:30:51 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-Jun-21 19:30:51 pm [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-Jun-21 19:30:51 pm [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-Jun-21 19:30:51 pm [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-Jun-21 19:30:51 pm [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1488 ms
2020-Jun-21 19:30:51 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-21 19:30:51 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-Jun-21 19:30:51 pm [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-21 19:30:51 pm [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-21 19:30:52 pm [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-21 19:30:52 pm [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-Jun-21 19:30:52 pm [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-Jun-21 19:30:52 pm [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 19:30:53 pm [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-Jun-21 19:30:53 pm [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b5d7233, org.springframework.security.web.context.SecurityContextPersistenceFilter@6d0bcf8c, org.springframework.security.web.header.HeaderWriterFilter@65a66a75, org.springframework.web.filter.CorsFilter@6be2b567, org.springframework.security.web.authentication.logout.LogoutFilter@5274830e, com.portfolio.api.security.AuthenticationFilter@169d1f92, com.portfolio.api.security.AuthorizationFilter@7fcbc336, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@66d44581, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2ea4e762, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1fe7fa16, org.springframework.security.web.session.SessionManagementFilter@78829412, org.springframework.security.web.access.ExceptionTranslationFilter@544e6b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7d8d671b]
2020-Jun-21 19:30:53 pm [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-Jun-21 19:30:54 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-Jun-21 19:30:54 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2020-Jun-21 19:30:54 pm [main] INFO  com.portfolio.api.PortfolioApplication - Started PortfolioApplication in 4.374 seconds (JVM running for 5.336)
2020-Jun-21 19:31:23 pm [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-Jun-21 19:31:23 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-Jun-21 19:31:23 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2020-Jun-21 19:40:55 pm [http-nio-8080-exec-9] ERROR com.portfolio.api.utility.LogingUtility - java.lang.IllegalArgumentException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"])
2020-Jun-21 19:40:55 pm [http-nio-8080-exec-9] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.web.server.ResponseStatusException: 400 BAD_REQUEST
2020-Jun-21 19:40:56 pm [http-nio-8080-exec-10] ERROR com.portfolio.api.utility.LogingUtility - java.lang.IllegalArgumentException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"])
2020-Jun-21 19:40:56 pm [http-nio-8080-exec-10] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.web.server.ResponseStatusException: 400 BAD_REQUEST
2020-Jun-21 19:41:02 pm [http-nio-8080-exec-2] ERROR com.portfolio.api.utility.LogingUtility - java.lang.IllegalArgumentException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"])
2020-Jun-21 19:41:02 pm [http-nio-8080-exec-2] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.web.server.ResponseStatusException: 400 BAD_REQUEST
2020-Jun-21 19:41:05 pm [http-nio-8080-exec-3] ERROR com.portfolio.api.utility.LogingUtility - java.lang.IllegalArgumentException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"])
2020-Jun-21 19:41:05 pm [http-nio-8080-exec-3] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.web.server.ResponseStatusException: 400 BAD_REQUEST
2020-Jun-21 19:41:13 pm [http-nio-8080-exec-6] ERROR com.portfolio.api.utility.LogingUtility - java.lang.IllegalArgumentException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"])
2020-Jun-21 19:41:13 pm [http-nio-8080-exec-6] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.web.server.ResponseStatusException: 400 BAD_REQUEST
2020-Jun-21 19:41:49 pm [http-nio-8080-exec-8] ERROR com.portfolio.api.utility.LogingUtility - java.lang.IllegalArgumentException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"]->org.hibernate.collection.internal.PersistentSet[0]->com.portfolio.api.entity.UserEntity["followers"])
2020-Jun-21 19:41:49 pm [http-nio-8080-exec-8] ERROR com.portfolio.api.utility.LogingUtility - org.springframework.web.server.ResponseStatusException: 400 BAD_REQUEST
2020-Jun-21 19:42:04 pm [RMI TCP Connection(19)-127.0.0.1] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2020-Jun-21 19:42:04 pm [RMI TCP Connection(19)-127.0.0.1] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-Jun-21 19:42:04 pm [RMI TCP Connection(19)-127.0.0.1] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 19:42:04 pm [RMI TCP Connection(19)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-Jun-21 19:42:04 pm [RMI TCP Connection(19)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-Jun-21 19:44:48 pm [main] INFO  com.portfolio.api.PortfolioApplication - Starting PortfolioApplication on DESKTOP-4PS6C6T with PID 17196 (E:\protfolio\portfolio-api\target\classes started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-21 19:44:48 pm [main] INFO  com.portfolio.api.PortfolioApplication - No active profile set, falling back to default profiles: default
2020-Jun-21 19:44:49 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-21 19:44:49 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62ms. Found 4 JPA repository interfaces.
2020-Jun-21 19:44:50 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-Jun-21 19:44:50 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-Jun-21 19:44:50 pm [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-Jun-21 19:44:50 pm [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-Jun-21 19:44:50 pm [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-Jun-21 19:44:50 pm [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1758 ms
2020-Jun-21 19:44:50 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-21 19:44:50 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-Jun-21 19:44:50 pm [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-21 19:44:50 pm [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-21 19:44:51 pm [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-21 19:44:51 pm [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-Jun-21 19:44:52 pm [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-Jun-21 19:44:52 pm [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 19:44:52 pm [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-Jun-21 19:44:52 pm [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@747e8659, org.springframework.security.web.context.SecurityContextPersistenceFilter@1642968c, org.springframework.security.web.header.HeaderWriterFilter@1764e45e, org.springframework.web.filter.CorsFilter@4b360a82, org.springframework.security.web.authentication.logout.LogoutFilter@f5f8de2, com.portfolio.api.security.AuthenticationFilter@75fa9254, com.portfolio.api.security.AuthorizationFilter@6f25ed2b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50b4e7b2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@71b7e9c8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6f69e2d8, org.springframework.security.web.session.SessionManagementFilter@4745bcc6, org.springframework.security.web.access.ExceptionTranslationFilter@6033f36c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@478fe415]
2020-Jun-21 19:44:53 pm [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-Jun-21 19:44:53 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-Jun-21 19:44:53 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2020-Jun-21 19:44:53 pm [main] INFO  com.portfolio.api.PortfolioApplication - Started PortfolioApplication in 5.379 seconds (JVM running for 6.754)
2020-Jun-21 19:45:04 pm [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-Jun-21 19:45:04 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-Jun-21 19:45:04 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 24 ms
2020-Jun-21 20:07:14 pm [RMI TCP Connection(34)-127.0.0.1] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2020-Jun-21 20:07:14 pm [RMI TCP Connection(34)-127.0.0.1] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-Jun-21 20:07:14 pm [RMI TCP Connection(34)-127.0.0.1] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-21 20:07:14 pm [RMI TCP Connection(34)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-Jun-21 20:07:14 pm [RMI TCP Connection(34)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-Jun-22 17:36:39 pm [main] INFO  com.portfolio.api.PortfolioApplication - Starting PortfolioApplication on DESKTOP-4PS6C6T with PID 15960 (E:\protfolio\portfolio-api\target\classes started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-22 17:36:39 pm [main] INFO  com.portfolio.api.PortfolioApplication - No active profile set, falling back to default profiles: default
2020-Jun-22 17:36:40 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-22 17:36:40 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63ms. Found 4 JPA repository interfaces.
2020-Jun-22 17:36:41 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-Jun-22 17:36:41 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-Jun-22 17:36:41 pm [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-Jun-22 17:36:41 pm [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-Jun-22 17:36:41 pm [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-Jun-22 17:36:41 pm [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2324 ms
2020-Jun-22 17:36:41 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-22 17:36:42 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-Jun-22 17:36:42 pm [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-22 17:36:42 pm [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-22 17:36:42 pm [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-22 17:36:42 pm [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-Jun-22 17:36:43 pm [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-Jun-22 17:36:43 pm [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-22 17:36:43 pm [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-Jun-22 17:36:43 pm [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6a7fc4c1, org.springframework.security.web.context.SecurityContextPersistenceFilter@214e3185, org.springframework.security.web.header.HeaderWriterFilter@79636080, org.springframework.web.filter.CorsFilter@270097ce, org.springframework.security.web.authentication.logout.LogoutFilter@2346f77a, com.portfolio.api.security.AuthenticationFilter@8b1170f, com.portfolio.api.security.AuthorizationFilter@69cb134, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@36f40d72, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6963b0bd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@125124ea, org.springframework.security.web.session.SessionManagementFilter@4e31b64d, org.springframework.security.web.access.ExceptionTranslationFilter@7d4bdbd8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2c3b0cc8]
2020-Jun-22 17:36:44 pm [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-Jun-22 17:36:44 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-Jun-22 17:36:44 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2020-Jun-22 17:36:44 pm [main] INFO  com.portfolio.api.PortfolioApplication - Started PortfolioApplication in 5.676 seconds (JVM running for 8.298)
2020-Jun-22 17:38:54 pm [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-Jun-22 17:38:54 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-Jun-22 17:38:54 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-Jun-22 18:00:17 pm [http-nio-8080-exec-6] ERROR com.portfolio.api.utility.LogingUtility - java.lang.NullPointerException
2020-Jun-22 18:00:17 pm [http-nio-8080-exec-6] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.portfolio.api.controller.UserController.searchUser(UserController.java:159) ~[classes/:?]
	at com.portfolio.api.controller.UserController$$FastClassBySpringCGLIB$$e5ebfe12.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.portfolio.api.controller.UserController$$EnhancerBySpringCGLIB$$8b32aa53.searchUser(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at com.portfolio.api.security.AuthorizationFilter.doFilterInternal(AuthorizationFilter.java:29) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:832) [?:?]
2020-Jun-22 18:00:20 pm [http-nio-8080-exec-10] ERROR com.portfolio.api.utility.LogingUtility - java.lang.NullPointerException
2020-Jun-22 18:00:20 pm [http-nio-8080-exec-10] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.portfolio.api.controller.UserController.searchUser(UserController.java:159) ~[classes/:?]
	at com.portfolio.api.controller.UserController$$FastClassBySpringCGLIB$$e5ebfe12.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.portfolio.api.controller.UserController$$EnhancerBySpringCGLIB$$8b32aa53.searchUser(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at com.portfolio.api.security.AuthorizationFilter.doFilterInternal(AuthorizationFilter.java:29) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:832) [?:?]
2020-Jun-22 18:00:30 pm [RMI TCP Connection(35)-127.0.0.1] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2020-Jun-22 18:00:30 pm [RMI TCP Connection(35)-127.0.0.1] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-Jun-22 18:00:30 pm [RMI TCP Connection(35)-127.0.0.1] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-22 18:00:30 pm [RMI TCP Connection(35)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-Jun-22 18:00:30 pm [RMI TCP Connection(35)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-Jun-22 18:02:58 pm [main] INFO  com.portfolio.api.PortfolioApplication - Starting PortfolioApplication on DESKTOP-4PS6C6T with PID 12976 (E:\protfolio\portfolio-api\target\classes started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-22 18:02:58 pm [main] INFO  com.portfolio.api.PortfolioApplication - No active profile set, falling back to default profiles: default
2020-Jun-22 18:02:58 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-22 18:02:58 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81ms. Found 4 JPA repository interfaces.
2020-Jun-22 18:02:59 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-Jun-22 18:02:59 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-Jun-22 18:02:59 pm [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-Jun-22 18:02:59 pm [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-Jun-22 18:02:59 pm [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-Jun-22 18:02:59 pm [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1604 ms
2020-Jun-22 18:02:59 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-22 18:02:59 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-Jun-22 18:03:00 pm [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-22 18:03:00 pm [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-22 18:03:00 pm [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-22 18:03:00 pm [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-Jun-22 18:03:00 pm [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-Jun-22 18:03:00 pm [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-22 18:03:01 pm [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-Jun-22 18:03:02 pm [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1820f274, org.springframework.security.web.context.SecurityContextPersistenceFilter@1c3b221f, org.springframework.security.web.header.HeaderWriterFilter@6f2bf657, org.springframework.web.filter.CorsFilter@221cdd87, org.springframework.security.web.authentication.logout.LogoutFilter@314c28dc, com.portfolio.api.security.AuthenticationFilter@4d66cb, com.portfolio.api.security.AuthorizationFilter@7c79f2cf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@238280df, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@35b58254, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@63551c66, org.springframework.security.web.session.SessionManagementFilter@5bf1b528, org.springframework.security.web.access.ExceptionTranslationFilter@50f13494, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@490fbeaa]
2020-Jun-22 18:03:02 pm [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-Jun-22 18:03:02 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-Jun-22 18:03:02 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2020-Jun-22 18:03:02 pm [main] INFO  com.portfolio.api.PortfolioApplication - Started PortfolioApplication in 4.966 seconds (JVM running for 6.283)
2020-Jun-22 18:03:14 pm [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-Jun-22 18:03:14 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-Jun-22 18:03:14 pm [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-Jun-22 18:03:14 pm [http-nio-8080-exec-4] ERROR com.portfolio.api.utility.LogingUtility - java.lang.NullPointerException
2020-Jun-22 18:03:14 pm [http-nio-8080-exec-4] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.portfolio.api.controller.UserController.searchUser(UserController.java:159) ~[classes/:?]
	at com.portfolio.api.controller.UserController$$FastClassBySpringCGLIB$$e5ebfe12.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.portfolio.api.controller.UserController$$EnhancerBySpringCGLIB$$f1fa8e03.searchUser(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at com.portfolio.api.security.AuthorizationFilter.doFilterInternal(AuthorizationFilter.java:29) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:832) [?:?]
2020-Jun-22 18:03:14 pm [http-nio-8080-exec-6] ERROR com.portfolio.api.utility.LogingUtility - java.lang.NullPointerException
2020-Jun-22 18:03:14 pm [http-nio-8080-exec-6] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.portfolio.api.controller.UserController.searchUser(UserController.java:159) ~[classes/:?]
	at com.portfolio.api.controller.UserController$$FastClassBySpringCGLIB$$e5ebfe12.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.portfolio.api.controller.UserController$$EnhancerBySpringCGLIB$$f1fa8e03.searchUser(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at com.portfolio.api.security.AuthorizationFilter.doFilterInternal(AuthorizationFilter.java:29) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:832) [?:?]
2020-Jun-22 18:03:35 pm [RMI TCP Connection(8)-127.0.0.1] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2020-Jun-22 18:03:35 pm [RMI TCP Connection(8)-127.0.0.1] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-Jun-22 18:03:35 pm [RMI TCP Connection(8)-127.0.0.1] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-22 18:03:35 pm [RMI TCP Connection(8)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-Jun-22 18:03:35 pm [RMI TCP Connection(8)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-Jun-22 18:08:01 pm [main] INFO  com.portfolio.api.PortfolioApplication - Starting PortfolioApplication on DESKTOP-4PS6C6T with PID 10624 (E:\protfolio\portfolio-api\target\classes started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-22 18:08:01 pm [main] INFO  com.portfolio.api.PortfolioApplication - No active profile set, falling back to default profiles: default
2020-Jun-22 18:08:02 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-22 18:08:02 pm [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81ms. Found 4 JPA repository interfaces.
2020-Jun-22 18:08:03 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-Jun-22 18:08:03 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-Jun-22 18:08:03 pm [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-Jun-22 18:08:03 pm [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-Jun-22 18:08:03 pm [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-Jun-22 18:08:03 pm [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1475 ms
2020-Jun-22 18:08:03 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-22 18:08:03 pm [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-Jun-22 18:08:03 pm [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-22 18:08:03 pm [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-22 18:08:03 pm [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-22 18:08:04 pm [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-Jun-22 18:08:04 pm [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-Jun-22 18:08:04 pm [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-22 18:08:05 pm [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-Jun-22 18:08:05 pm [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6cbb6c41, org.springframework.security.web.context.SecurityContextPersistenceFilter@5c7e55a4, org.springframework.security.web.header.HeaderWriterFilter@65c689e7, org.springframework.web.filter.CorsFilter@6787bd41, org.springframework.security.web.authentication.logout.LogoutFilter@6d946eee, com.portfolio.api.security.AuthenticationFilter@44c2e8a8, com.portfolio.api.security.AuthorizationFilter@3340ff7c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7d0df326, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@77d3c3d7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@42e4431, org.springframework.security.web.session.SessionManagementFilter@5d04fbb7, org.springframework.security.web.access.ExceptionTranslationFilter@750457a5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1734b1a]
2020-Jun-22 18:08:05 pm [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-Jun-22 18:08:06 pm [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-Jun-22 18:08:06 pm [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2020-Jun-22 18:08:06 pm [main] INFO  com.portfolio.api.PortfolioApplication - Started PortfolioApplication in 4.406 seconds (JVM running for 5.522)
2020-Jun-22 18:08:12 pm [http-nio-8080-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-Jun-22 18:08:12 pm [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-Jun-22 18:08:12 pm [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-Jun-22 18:26:01 pm [RMI TCP Connection(24)-127.0.0.1] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2020-Jun-22 18:26:01 pm [RMI TCP Connection(24)-127.0.0.1] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-Jun-22 18:26:01 pm [RMI TCP Connection(24)-127.0.0.1] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-22 18:26:01 pm [RMI TCP Connection(24)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-Jun-22 18:26:01 pm [RMI TCP Connection(24)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-Jun-24 09:46:26 am [main] INFO  com.portfolio.api.PortfolioApplication - Starting PortfolioApplication on DESKTOP-4PS6C6T with PID 5412 (E:\protfolio\portfolio-api\target\classes started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-24 09:46:26 am [main] INFO  com.portfolio.api.PortfolioApplication - No active profile set, falling back to default profiles: default
2020-Jun-24 09:46:29 am [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-24 09:46:29 am [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 155ms. Found 4 JPA repository interfaces.
2020-Jun-24 09:46:31 am [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-Jun-24 09:46:31 am [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-Jun-24 09:46:31 am [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-Jun-24 09:46:31 am [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-Jun-24 09:46:31 am [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-Jun-24 09:46:31 am [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5308 ms
2020-Jun-24 09:46:32 am [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-24 09:46:37 am [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-3.4.2.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:354) ~[HikariCP-3.4.2.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202) ~[HikariCP-3.4.2.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473) ~[HikariCP-3.4.2.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:554) ~[HikariCP-3.4.2.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-3.4.2.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-3.4.2.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158) ~[spring-jdbc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116) ~[spring-jdbc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79) ~[spring-jdbc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:324) ~[spring-jdbc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:120) ~[spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42) ~[spring-boot-autoconfigure-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:130) ~[spring-boot-autoconfigure-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41) ~[spring-boot-autoconfigure-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:136) ~[spring-boot-autoconfigure-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:102) ~[spring-boot-autoconfigure-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:94) ~[spring-boot-autoconfigure-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:132) ~[spring-boot-autoconfigure-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:133) ~[spring-boot-autoconfigure-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) [spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) [spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108) [spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) [spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) [spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at com.portfolio.api.PortfolioApplication.main(PortfolioApplication.java:16) [classes/:?]
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:481) ~[?:?]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 48 more
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.Net.pollConnect(Native Method) ~[?:?]
	at sun.nio.ch.Net.pollConnectNow(Net.java:589) ~[?:?]
	at sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549) ~[?:?]
	at sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333) ~[?:?]
	at java.net.Socket.connect(Socket.java:648) ~[?:?]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 48 more
2020-Jun-24 09:46:37 am [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-24 09:46:37 am [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-24 09:46:38 am [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-24 09:46:38 am [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-24 09:46:43 am [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-3.4.2.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:354) ~[HikariCP-3.4.2.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202) ~[HikariCP-3.4.2.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473) ~[HikariCP-3.4.2.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:554) ~[HikariCP-3.4.2.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-3.4.2.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-3.4.2.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1202) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1233) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) ~[spring-orm-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) [spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) [spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108) [spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) [spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) [spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at com.portfolio.api.PortfolioApplication.main(PortfolioApplication.java:16) [classes/:?]
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:481) ~[?:?]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 49 more
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.Net.pollConnect(Native Method) ~[?:?]
	at sun.nio.ch.Net.pollConnectNow(Net.java:589) ~[?:?]
	at sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549) ~[?:?]
	at sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333) ~[?:?]
	at java.net.Socket.connect(Socket.java:648) ~[?:?]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 49 more
2020-Jun-24 09:46:43 am [main] WARN  org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata : Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2020-Jun-24 09:46:43 am [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
2020-Jun-24 09:46:43 am [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-Jun-24 09:46:43 am [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-Jun-24 09:46:43 am [main] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108) ~[spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) ~[spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at com.portfolio.api.PortfolioApplication.main(PortfolioApplication.java:16) [classes/:?]
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:275) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1202) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1233) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) ~[spring-orm-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	... 16 more
Caused by: org.hibernate.HibernateException: Access to DialectResolutionInfo cannot be null when 'hibernate.dialect' not set
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:100) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:54) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:137) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1202) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1233) ~[hibernate-core-5.4.12.Final.jar:5.4.12.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) ~[spring-orm-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	... 16 more
2020-Jun-24 09:47:55 am [main] INFO  com.portfolio.api.PortfolioApplication - Starting PortfolioApplication on DESKTOP-4PS6C6T with PID 10812 (E:\protfolio\portfolio-api\target\classes started by jsprt in E:\protfolio\portfolio-api)
2020-Jun-24 09:47:55 am [main] INFO  com.portfolio.api.PortfolioApplication - No active profile set, falling back to default profiles: default
2020-Jun-24 09:47:56 am [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-Jun-24 09:47:56 am [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69ms. Found 4 JPA repository interfaces.
2020-Jun-24 09:47:57 am [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-Jun-24 09:47:57 am [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-Jun-24 09:47:57 am [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-Jun-24 09:47:57 am [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-Jun-24 09:47:57 am [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-Jun-24 09:47:57 am [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1585 ms
2020-Jun-24 09:47:57 am [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-Jun-24 09:48:01 am [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-Jun-24 09:48:01 am [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-Jun-24 09:48:02 am [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.12.Final
2020-Jun-24 09:48:02 am [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-Jun-24 09:48:02 am [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-Jun-24 09:48:07 am [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-Jun-24 09:48:07 am [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-Jun-24 09:48:09 am [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-Jun-24 09:48:10 am [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7fcbc336, org.springframework.security.web.context.SecurityContextPersistenceFilter@1afa048a, org.springframework.security.web.header.HeaderWriterFilter@3ba8ef4e, org.springframework.web.filter.CorsFilter@1fe7fa16, org.springframework.security.web.authentication.logout.LogoutFilter@25c16cf7, com.portfolio.api.security.AuthenticationFilter@61503d00, com.portfolio.api.security.AuthorizationFilter@1fcfcf37, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@70eb94d7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@74919649, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3ebc6d8b, org.springframework.security.web.session.SessionManagementFilter@a1a72d4, org.springframework.security.web.access.ExceptionTranslationFilter@5a07ae2f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@acb1c9c]
2020-Jun-24 09:48:11 am [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-Jun-24 09:48:12 am [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-Jun-24 09:48:12 am [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2020-Jun-24 09:48:12 am [main] INFO  com.portfolio.api.PortfolioApplication - Started PortfolioApplication in 17.51 seconds (JVM running for 18.641)
2020-Jun-24 09:49:37 am [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-Jun-24 09:49:37 am [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-Jun-24 09:49:37 am [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 42 ms
